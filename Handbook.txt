ШАПКА ДЛЯ НАЧАЛА РАБОТЫ С SELENIUM:
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import time
import math

link = "http://suninjuly.github.io/file_input.html"
browser = webdriver.Chrome()
browser.maximize_window()
browser.implicitly_wait(5)
browser.get(link)

МЕТОДЫ ПОИСКА ЭЛЕМЕНТОВ ПО СТРАНИЦЕ:
browser.find_element_by_css_selector();
browser.find_element_by_css_id();
browser.find_element_by_xpath();
browser.find_element_by_name();
browser.find_element_by_tag_name();
browser.find_element_by_class_name();
browser.find_element_by_link_text();
browser.find_element_by_partial_link_text();

ВЗЯТЬ ЗНАЧЕНИЕ АТРИБУТА:
browser.get_attribute();

ВЗЯТЬ СОДЕРЖИМОЕ ТЭГА:
"метод поиска элкментра по странице" + .text

ПРИМЕР МЕТОДА ЗАГРУЗКИ ФАЙЛА:
current_dir = os.path.abspath(r"C:\Users\admin\selenium_course")
# Верхнуюю строчку можно заменить на current_dir = os.path.abspath(os.path.dirname(__file__))
file_path = os.path.join(current_dir, 'file.txt')
element = browser.find_element_by_css_selector("#file")
element.send_keys(file_path)

АЛЛЕРТЫ
МЕТОДЫ ДЛЯ РАБОТЫ С АЛЛЕКРТОМ:
alert = browser.switch_to.alert
alert.accept()

ПОЛУЧЕНИЕ ТЕКСТА ИЗ АЛЛЕРТА:
alert = browser.switch_to.alert
alert_text = alert.text

МЕТОДЫ ДЛЯ РАБОТЫ С КОНФЕРМ:
confirm = browser.switch_to.alert
confirm.accept() или confirm.dismiss() - Принять или Отменить

МЕТОДЫ ДЛЯ РАБОТЫ С ПРОМПТ:
prompt = browser.switch_to.alert
prompt.send_keys("My answer") - Ввод сообщения
prompt.accept()


КОПИРОВАТЬ ТЕКСТ ИЗ АЛЛЕРТА (КОНКРЕТНО ДЛЯ АЛЛЕРТОВ ИЗ СТЕПИК)
alert = browser.switch_to.alert
alert_text = alert.text
addToClipBoard = alert_text.split(': ')[-1]
pyperclip.copy(addToClipBoard)

ПЕРЕХОД НА НОВУЮ ВКЛАДКУ БРАУЗЕРА:
browser.switch_to.window("window name")

ВОЗВРАЩАЕТ МАССИВ ИМЁН ВСЕХ ВКЛАДОК:
window_handles
first_window = browser.window_handles[0] - первая вкладка
new_window = browser.window_handles[1] - новая вкладка

БИБЛИОТЕКА expected_conditions
ДАННАЯ БИБЛИОТЕКА РАБОТАЕТ ПОСЛЕ ИМПОРТА:
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

ГОВОРИМ SELENIUM ПРОВЕРЯТЬ В ТЕЧЕНИЕ 5 СЕКУНД, ПОКА КНОПКА НЕ СТАНЕТ КЛИКАБЕЛЬНОЙ:
button = WebDriverWait(browser, 5).until(
    EC.element_to_be_clickable((By.ID, "verify"))
)

# ГОВОРИМ SELENIUM ПРОВЕРЯТЬ В ТЕЧЕНИЕ 12 СЕКУНД, ПОКА ЦЕНА ДОМА НЕ СТАНЕТ $100 (пример из конкретного задания).
house_price = WebDriverWait(browser, 12).until(
    EC.text_to_be_present_in_element((By.ID, "price"), "$100")
)